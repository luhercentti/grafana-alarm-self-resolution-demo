# Enhanced alertmanager configuration for JSM/JIRA self-resolution
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-prometheus-stack-alertmanager
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
type: Opaque
stringData:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      
    route:
      group_by: ['alertname', 'cluster', 'service', 'instance']
      group_wait: 10s
      group_interval: 30s
      repeat_interval: 12h
      receiver: 'default-webhook'
      routes:
      - match:
          service: test-app
        receiver: 'jsm-webhook'
        group_by: ['alertname', 'instance']
        repeat_interval: 5m  # Send reminder notifications every 5 minutes for testing
        continue: false  # Don't fall through to other routes
        
    receivers:
    - name: 'default-webhook'
      webhook_configs:
      - url: 'http://webhook-receiver-service.monitoring.svc.cluster.local:8080/webhook'
        send_resolved: true
        http_config:
          follow_redirects: true
        title: 'Alert: {{ .GroupLabels.alertname }}'
        text: |
          Status: {{ .Status }}
          Alerts: {{ len .Alerts }}
          {{ range .Alerts }}
          - Alert: {{ .Labels.alertname }}
            Instance: {{ .Labels.instance }}
            Status: {{ .Status }}
            StartsAt: {{ .StartsAt }}
            {{ if eq .Status "resolved" }}EndsAt: {{ .EndsAt }}{{ end }}
            Description: {{ .Annotations.description }}
          {{ end }}
        
    - name: 'jsm-webhook'
      webhook_configs:
      - url: 'http://webhook-receiver-service.monitoring.svc.cluster.local:8080/webhook'
        send_resolved: true  # 🔑 CRITICAL: This ensures resolution notifications
        http_config:
          follow_redirects: true
        max_alerts: 10
        title: 'JSM Alert: {{ .GroupLabels.alertname }}'
        text: |
          🚨 Alert Status: {{ .Status }}
          🏷️  Alert Count: {{ len .Alerts }}
          
          {{ if eq .Status "firing" }}
          🔥 NEW INCIDENTS TO CREATE:
          {{ else if eq .Status "resolved" }}
          ✅ INCIDENTS TO CLOSE:
          {{ end }}
          
          {{ range .Alerts }}
          ---
          📋 Alert: {{ .Labels.alertname }}
          🎯 Service: {{ .Labels.service }}
          🖥️  Instance: {{ .Labels.instance }}
          📊 Severity: {{ .Labels.severity }}
          👥 Team: {{ .Labels.team }}
          📝 Summary: {{ .Annotations.summary }}
          📄 Description: {{ .Annotations.description }}
          ⏰ Started: {{ .StartsAt.Format "2006-01-02 15:04:05 UTC" }}
          {{ if eq .Status "resolved" }}🏁 Resolved: {{ .EndsAt.Format "2006-01-02 15:04:05 UTC" }}{{ end }}
          
          {{ if eq .Status "firing" }}
          🎫 Action: CREATE JSM ticket with:
             - Summary: {{ .Annotations.summary }}
             - Description: {{ .Annotations.description }}
             - Labels: {{ .Labels.service }}, {{ .Labels.team }}
             - Priority: {{ if eq .Labels.severity "critical" }}High{{ else }}Medium{{ end }}
          {{ else if eq .Status "resolved" }}
          🎫 Action: CLOSE JSM ticket for {{ .Labels.alertname }}
             - Add resolution comment: "Alert condition resolved automatically"
             - Set status to: Done/Resolved
          {{ end }}
          {{ end }}
        
    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'cluster', 'service', 'instance']
      
    # Silence rules (optional - for maintenance windows)
    # silences:
    # - matchers:
    #   - name: alertname
    #     value: TestAppDown
    #   startsAt: '2025-07-20T10:00:00Z'
    #   endsAt: '2025-07-20T12:00:00Z'
    #   createdBy: 'maintenance-window'
    #   comment: 'Scheduled maintenance'
